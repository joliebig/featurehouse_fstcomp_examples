<?xml version="1.0" encoding="UTF-8"?>
<modificationComposition>
	<modification>
		<type>introduction</type>
		<traversal>..PolyLineFigure*:ClassDeclaration || ..LineConnection*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
						import org.jhotdraw.*;
					</text>
					<tType>java.import</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..PolyLineFigure*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void write(StorableOutput dw) {
		super.write(dw);
		dw.writeInt(fPoints.size());
		Iterator iter = points();
		while (iter.hasNext()) {
			Point p = (Point)iter.next();
			dw.writeInt(p.x);
			dw.writeInt(p.y);
		}
		dw.writeStorable(fStartDecoration);
		dw.writeStorable(fEndDecoration);
		dw.writeColor(fFrameColor);
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..PolyLineFigure*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void read(StorableInput dr) /*@AJHD throws IOException*/ {
		super.read(dr);
		int size = dr.readInt();
		fPoints = CollectionsFactory.current().createList(size);
		for (int i=0; i<size; i++) {
			int x = dr.readInt();
			int y = dr.readInt();
			fPoints.add(new Point(x,y));
		}
		setStartDecoration((LineDecoration)dr.readStorable());
		setEndDecoration((LineDecoration)dr.readStorable());
		fFrameColor = dr.readColor();
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..LineConnection*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void write(StorableOutput dw) {
		super.write(dw);
		dw.writeStorable(getStartConnector());
		dw.writeStorable(getEndConnector());
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..LineConnection*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void read(StorableInput dr) /*@AJHD throws IOException*/ {
		super.read(dr);
		Connector start = (Connector)dr.readStorable();
		if (start != null) {
			connectStart(start);
		}
		Connector end = (Connector)dr.readStorable();
		if (end != null) {
			connectEnd(end);
		}
		if ((start != null) && (end != null)) {
			updateConnection();
		}
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
</modificationComposition>
