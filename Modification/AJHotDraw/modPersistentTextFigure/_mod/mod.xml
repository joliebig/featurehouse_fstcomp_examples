<?xml version="1.0" encoding="UTF-8"?>
<modificationComposition>
	<modification>
		<type>introduction</type>
		<traversal>..TextFigure*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
						import org.jhotdraw.*;
					</text>
					<tType>java.import</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..TextFigure*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void write(StorableOutput dw) {
		super.write(dw);
		Rectangle r = displayBox();
		dw.writeInt(r.x);
		dw.writeInt(r.y);
		dw.writeString(getText());
		dw.writeString(fFont.getName());
		dw.writeInt(fFont.getStyle());
		dw.writeInt(fFont.getSize());
		dw.writeBoolean(fIsReadOnly);
		dw.writeStorable(getObservedFigure());
		dw.writeStorable(getLocator());
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
	<modification>
		<type>introduction</type>
		<traversal>..TextFigure*:ClassDeclaration</traversal>
		<content>
			<parsed>
				<plainText>
					<text>
	public void read(StorableInput dr) /*@AJHD refactored throws IOException*/ {
		super.read(dr);
		markDirty();
		basicDisplayBox(new Point(dr.readInt(), dr.readInt()), null);
		setText(dr.readString());
		fFont = new Font(dr.readString(), dr.readInt(), dr.readInt());
		fIsReadOnly = dr.readBoolean();

		setObservedFigure((Figure) dr.readStorable());
		if (getObservedFigure() != null) {
			getObservedFigure().addFigureChangeListener(this);
		}
		setLocator((OffsetLocator) dr.readStorable());
	}
					</text>
					<tType>java.method</tType>
				</plainText>
			</parsed>
		</content>
	</modification>
</modificationComposition>
