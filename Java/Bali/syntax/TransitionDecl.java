// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.



public class TransitionDecl extends Es {

    final public static int ARG_LENGTH = 5 ;
    final public static int TOK_LENGTH = 5 ;

    public AstToken getARROW () {
        
        return (AstToken) tok [2] ;
    }

    public AST_Exp getAST_Exp () {
        
        return (AST_Exp) arg [3] ;
    }

    public Block getBlock () {
        
        return (Block) arg [4] ;
    }

    public AstToken getCONDITION () {
        
        return (AstToken) tok [3] ;
    }

    public AstToken getDO () {
        
        return (AstToken) tok [4] ;
    }

    public AstToken getEDGE () {
        
        return (AstToken) tok [0] ;
    }

    public QName getQName () {
        
        return (QName) arg [2] ;
    }

    public StartName getStartName () {
        
        return (StartName) arg [1] ;
    }

    public boolean[] printorder () {
        
        return new boolean[] {true, false, true, false, true, false, true, false, true, false} ;
    }

    public TransitionDecl setParms
    (AstToken tok0, QName arg0, AstToken tok1, StartName arg1, AstToken tok2, QName arg2, AstToken tok3, AST_Exp arg3, AstToken tok4, Block arg4)
    {
        
        arg = new AstNode [ARG_LENGTH] ;
        tok = new AstTokenInterface [TOK_LENGTH] ;
        
        tok [0] = tok0 ;            /* EDGE */
        arg [0] = arg0 ;            /* QName */
        tok [1] = tok1 ;            /* ":" */
        arg [1] = arg1 ;            /* StartName */
        tok [2] = tok2 ;            /* ARROW */
        arg [2] = arg2 ;            /* QName */
        tok [3] = tok3 ;            /* CONDITION */
        arg [3] = arg3 ;            /* AST_Exp */
        tok [4] = tok4 ;            /* DO */
        arg [4] = arg4 ;            /* Block */
        
        InitChildren () ;
        return (TransitionDecl) this ;
    }

}
