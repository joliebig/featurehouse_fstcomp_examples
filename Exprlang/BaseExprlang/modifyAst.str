module modifyAst

imports 
  include/Exprlang
  check

strategies

  modify =
    bottomup(try(modifyAst))

rules

  modifyAst:
    Assign(x, e) -> Assign(x, e){t}
    where
      <typeof> e => t
    
  modifyAst:
    UnaryMinus(i) -> UnaryMinus(i){Type("Int")}
  
  modifyAst:
    Int(i) -> Int(i){Type("Int")}	
  
  typeof:
    e{t*} -> t
    where
      <fetch-elem(is-type)> t* => t

  is-type = 
    ?Type(_)

  getType:
    Type(t) -> t

  modifyAst:
    VarDec(p, t) -> VarDec(p, t)	
  
  modifyAst:
    Var(x) -> Var(x){t}
    where
      t' := <bagof-GetVarType> x; 
      t := <fetch-elem(id)> t'

  modifyAst:
    String(s) -> String(s){Type("String")}