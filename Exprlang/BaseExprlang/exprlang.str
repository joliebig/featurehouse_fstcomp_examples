module exprlang

imports
  libstratego-lib
  libstratego-gpp
  libstratego-aterm
  include/Exprlang
  lib/editor-common.generated
  check
  generate
  modifyAst
  eval
  simplify

rules

  editor-analyze:
    (ast, path, project-path) -> (ast', errors, warnings, notes)
    with
      editor-init;
      ast' := <analyze> ast;
      errors   := <collect-all(constraint-error, conc)> ast';
      warnings := <collect-all(constraint-warning, conc)> ast';      
      notes    := <collect-all(constraint-note, conc)> ast'      

  generate-java:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"java")> path;
      result   := <to-java> selected

  generate-aterm:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path;
      result   := selected

  generate-modified-aterm:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path;
      result   := <modify> selected

  editor-hover:
    (target, position, ast, path, project-path) ->  $[Hover help: [<write-to-string> target]]
  
  editor-resolve:
    (node, position, ast, path, project-path) -> target
    where
      <debug(!"Resolve: ")> node; 
      Type(type) := node; 
      target     := <GetVar> type